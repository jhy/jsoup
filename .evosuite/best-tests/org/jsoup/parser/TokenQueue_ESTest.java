/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 16 21:48:31 GMT 2018
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokenQueue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenQueue_ESTest extends TokenQueue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Did not find balanced marker at '");
      char[] charArray0 = new char[5];
      charArray0[0] = '%';
      charArray0[1] = 'f';
      charArray0[2] = '!';
      charArray0[3] = ' ';
      tokenQueue0.consumeCssIdentifier();
      charArray0[4] = '\'';
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.consumeAttributeKey();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "Did not find balanced marker at '";
      stringArray0[3] = "Did";
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      Character character0 = new Character('*');
      Character.isAlphabetic(0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchChomp("                 ");
      tokenQueue0.peek();
      tokenQueue0.matchChomp("org.jsoup.parser.TokenQueue");
      tokenQueue0.consume();
      tokenQueue0.consume();
      tokenQueue0.advance();
      tokenQueue0.matchesWord();
      tokenQueue0.addFirst(")lyT_yeM");
      tokenQueue0.isEmpty();
      tokenQueue0.chompBalanced('*', ')');
      tokenQueue0.matchesStartTag();
      tokenQueue0.consumeTagName();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("@sQ?1 *&\n>Cg-5:");
      String string0 = "?";
      tokenQueue0.matchesWhitespace();
      tokenQueue0.chompTo("?");
      tokenQueue0.matchesWhitespace();
      String string1 = "Q8u85";
      tokenQueue0.consumeToIgnoreCase("Q8u85");
      tokenQueue0.consumeTo("@sQ?1 *&\n>Cg-5:");
      // Undeclared exception!
      try { 
        tokenQueue0.addFirst((Character) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      Character character0 = new Character('*');
      Character.isAlphabetic(0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchChomp("                 ");
      tokenQueue0.peek();
      tokenQueue0.matchChomp("org.jsoup.parser.TokenQueue");
      tokenQueue0.consume();
      tokenQueue0.consume();
      tokenQueue0.advance();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchesWord();
      tokenQueue0.addFirst(")lyT_yeM");
      tokenQueue0.isEmpty();
      tokenQueue0.addFirst(character0);
      tokenQueue0.chompBalanced('*', ')');
      tokenQueue0.matchesStartTag();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("7b}3Zuri0?");
      Character character0 = new Character(';');
      Character.isAlphabetic(0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchChomp("7b}3Zuri0?");
      tokenQueue0.peek();
      tokenQueue0.matchChomp("org.jsoup.parser.TokenQueue");
      tokenQueue0.consume();
      tokenQueue0.consume();
      tokenQueue0.advance();
      tokenQueue0.matchesWord();
      tokenQueue0.addFirst(")lyT_yeM");
      tokenQueue0.matchesWord();
      tokenQueue0.chompBalanced(';', ')');
      tokenQueue0.matchesStartTag();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("cX\"]\"d'pHA4sX.Z4f,");
      tokenQueue0.consumeWhitespace();
      tokenQueue0.consumeToIgnoreCase("|");
      tokenQueue0.addFirst("cX\"]\"d'pHA4sX.Z4f,");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consume("");
      tokenQueue0.matchChomp("w");
      tokenQueue0.chompBalanced('V', 'V');
      tokenQueue0.matchChomp("");
      tokenQueue0.matches("");
      tokenQueue0.matchChomp("");
      tokenQueue0.matchChomp("");
      tokenQueue0.isEmpty();
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      TokenQueue.unescape("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      tokenQueue0.matchesAny(stringArray0);
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.remainder();
      tokenQueue0.matchChomp("_;N%1:!3F~U_ .?B");
      tokenQueue0.remainder();
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("~qtbPY/YEtj&a*#F ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "~qtbPY/YEtj&a*#F ";
      stringArray0[1] = "~qtbPY/YEtj&a*#F ";
      tokenQueue0.consumeToAny(stringArray0);
      String string0 = "Queue did not match expected sequence";
      tokenQueue0.consume("~qtbPY/YEtj&a*#F ");
      tokenQueue0.chompToIgnoreCase("~qtbPY/YEtj&a*#F ");
      tokenQueue0.consumeWord();
      tokenQueue0.matches("Queue did not match expected sequence");
      // Undeclared exception!
      try { 
        tokenQueue0.consume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[.dl&%`bFHGkQ'T");
      tokenQueue0.consumeToIgnoreCase("[.dl&%`bFHGkQ'T");
      tokenQueue0.chompTo("[.dl&%`bFHGkQ'T");
      tokenQueue0.consume("");
      tokenQueue0.chompToIgnoreCase("R_bz]*");
      tokenQueue0.chompTo("[.dl&%`bFHGkQ'T");
      TokenQueue.unescape("");
      TokenQueue.unescape("[.dl&%`bFHGkQ'T");
      tokenQueue0.consumeTagName();
      tokenQueue0.consumeTo("");
      tokenQueue0.chompTo("      ");
      tokenQueue0.matchesWord();
      tokenQueue0.consumeTagName();
      tokenQueue0.peek();
      tokenQueue0.matchesWhitespace();
      tokenQueue0.matchesWord();
      tokenQueue0.advance();
      tokenQueue0.matchesCS("");
      tokenQueue0.chompBalanced('', '');
      tokenQueue0.remainder();
      TokenQueue.unescape("");
      char[] charArray0 = new char[0];
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.matchesCS("");
      tokenQueue0.consumeTagName();
      // Undeclared exception!
      try { 
        tokenQueue0.consume();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      TokenQueue.unescape("]0-");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeTo("XEzUA^DK-,@/b)f");
      tokenQueue0.chompTo("");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.remainder();
      TokenQueue.unescape("*jB~#d`@O3xi`^");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.isEmpty();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.isEmpty();
      tokenQueue0.consumeToAny((String[]) null);
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeElementSelector();
      // Undeclared exception!
      try { 
        tokenQueue0.matchesAny((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'06(`JhS&p>B");
      tokenQueue0.chompBalanced('Z', 'V');
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'06(`JhS&p>B";
      stringArray0[1] = "'06(`JhS&p>B";
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeCssIdentifier();
      stringArray0[2] = "'06(`JhS&p>B";
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.addFirst("'06(`JhS&p>B");
      tokenQueue0.remainder();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      Character character0 = Character.valueOf('K');
      Character.getName(13);
      Character.lowSurrogate(13);
      tokenQueue0.addFirst(character0);
      tokenQueue0.matchesWhitespace();
      tokenQueue0.isEmpty();
      // Undeclared exception!
      try { 
        tokenQueue0.matchesCS((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.chompTo("_");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.addFirst("_");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.chompToIgnoreCase(";(rt'");
      Character character0 = new Character('6');
      tokenQueue0.addFirst(character0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.matchesWord();
      tokenQueue0.consume("");
      tokenQueue0.consumeCssIdentifier();
      Character character1 = new Character('6');
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '=';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = '6';
      charArray0[6] = '6';
      charArray0[7] = '6';
      charArray0[8] = '6';
      // Undeclared exception!
      try { 
        Character.toChars((-49), charArray0, (-1130));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Character", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("             ");
      tokenQueue0.consumeTo("             ");
      tokenQueue0.matchesWhitespace();
      tokenQueue0.consumeToIgnoreCase("             ");
      tokenQueue0.consumeAttributeKey();
      TokenQueue.unescape("");
      // Undeclared exception!
      try { 
        TokenQueue.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.matchesCS("Queue not long enough to consume sequence");
      tokenQueue0.matchChomp("Queue not long enough to consume sequence");
      tokenQueue0.remainder();
      TokenQueue.unescape("l.%\"PfBZc@VMi");
      tokenQueue0.peek();
      tokenQueue0.consumeElementSelector();
      char[] charArray0 = new char[2];
      charArray0[0] = '\u0000';
      charArray0[1] = '\u0000';
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.chompTo("4/t?oD");
      tokenQueue0.chompBalanced('\u0000', '!');
      tokenQueue0.matchesWord();
      String[] stringArray0 = new String[0];
      tokenQueue0.consumeToAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("q/P-8T8F}(hY");
      tokenQueue0.consumeTo("q/P-8T8F}(hY");
      tokenQueue0.addFirst("");
      tokenQueue0.consumeWord();
      TokenQueue.unescape("q/P-8T8F}(hY");
      // Undeclared exception!
      try { 
        tokenQueue0.consume("-");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("WHJis2-w%{FXv-b}G");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.remainder();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("omXk` ,t83W-|");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "omXk` ,t83W-|";
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.consumeTo("omXk` ,t83W-|");
      tokenQueue0.matchesCS("");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeWhitespace();
      tokenQueue0.consumeToIgnoreCase("-");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.matchesStartTag();
      tokenQueue0.matchesStartTag();
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.remainder();
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      tokenQueue0.chompTo("-");
      String string0 = null;
      tokenQueue0.consumeWord();
      tokenQueue0.advance();
      // Undeclared exception!
      try { 
        tokenQueue0.chompTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      char char0 = '%';
      Character character0 = new Character('%');
      Character.isIdeographic(95);
      tokenQueue0.consume();
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeTo("Queue did not match expected sequence");
      String string0 = "width must be > 0";
      tokenQueue0.remainder();
      tokenQueue0.chompToIgnoreCase("width must be > 0");
      TokenQueue.unescape("|");
      tokenQueue0.isEmpty();
      // Undeclared exception!
      try { 
        tokenQueue0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'");
      tokenQueue0.matchChomp("");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeWord();
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = '0';
      charArray0[2] = '3';
      charArray0[3] = '+';
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "";
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.chompBalanced('O', 'V');
      // Undeclared exception!
      try { 
        tokenQueue0.matchChomp((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("{:=JZzW");
      tokenQueue0.consumeTagName();
      tokenQueue0.consume();
      tokenQueue0.consumeWord();
      tokenQueue0.chompBalanced('@', '{');
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTagName();
      tokenQueue0.addFirst("");
      String string0 = "4CcH&>";
      tokenQueue0.matches("4CcH&>");
      tokenQueue0.advance();
      tokenQueue0.consume("");
      Character character0 = new Character('(');
      Character.getName(0);
      Character.getName(0);
      tokenQueue0.addFirst(character0);
      // Undeclared exception!
      try { 
        tokenQueue0.addFirst((Character) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      tokenQueue0.addFirst("  ");
      tokenQueue0.consume("  ");
      tokenQueue0.matchChomp("  ");
      tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      tokenQueue0.consumeWhitespace();
      char[] charArray0 = new char[1];
      tokenQueue0.consumeToIgnoreCase("  ");
      tokenQueue0.consumeWhitespace();
      charArray0[0] = '~';
      tokenQueue0.consumeWord();
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.remainder();
      tokenQueue0.matchChomp("  ");
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "";
      TokenQueue tokenQueue0 = new TokenQueue("");
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TokenQueue.unescape("X5edJ#");
      TokenQueue tokenQueue0 = new TokenQueue("X5edJ#");
      tokenQueue0.matchesWhitespace();
      tokenQueue0.consumeWord();
      tokenQueue0.addFirst("");
      // Undeclared exception!
      try { 
        tokenQueue0.consume("X5edJ#");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("q/P-8T8F}(hY");
      tokenQueue0.addFirst("");
      tokenQueue0.consumeWord();
      tokenQueue0.consumeWord();
      // Undeclared exception!
      try { 
        tokenQueue0.chompTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("         ");
      tokenQueue0.consumeTagName();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.remainder();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTagName();
      Character character0 = Character.valueOf('4');
      Character.isSurrogate('4');
      Character.lowSurrogate(0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.peek();
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("OB~)]qA/4X");
      Character character0 = Character.valueOf('U');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeTo("           ");
      tokenQueue0.chompToIgnoreCase("/");
      tokenQueue0.addFirst("OB~)]qA/4X");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.chompBalanced('J', 'i');
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.consumeTo("org.jsoup.parser.TokenQueue");
      tokenQueue0.remainder();
      tokenQueue0.consumeWord();
      tokenQueue0.advance();
      tokenQueue0.addFirst("D");
      tokenQueue0.consumeToIgnoreCase("D");
      char char0 = 'P';
      Character character0 = Character.valueOf('P');
      Character.compare('W', 'W');
      tokenQueue0.addFirst(character0);
      tokenQueue0.matchesStartTag();
      tokenQueue0.peek();
      tokenQueue0.matchChomp("D");
      // Undeclared exception!
      try { 
        tokenQueue0.consume("Queue did not match expected sequence");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = null;
      TokenQueue tokenQueue0 = null;
      try {
        tokenQueue0 = new TokenQueue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("NN\"I2[$C\"3?z&^G");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.addFirst("NN\"I2[$C\"3?z&^G");
      tokenQueue0.consumeTo("Queue not long enough to consume sequence");
      tokenQueue0.matches("NN\"I2[$C\"3?z&^G");
      // Undeclared exception!
      try { 
        tokenQueue0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("r4mQUd+K");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "v-8e,^,sT}8";
      stringArray0[1] = "r4mQUd+K";
      stringArray0[2] = "r4mQUd+K";
      stringArray0[3] = "r4mQUd+K";
      stringArray0[4] = "r4mQUd+K";
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.advance();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeElementSelector();
      char[] charArray0 = new char[0];
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.matchesCS("");
      tokenQueue0.matches("");
      tokenQueue0.consumeTo("Rf^E<R9");
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consumeAttributeKey();
      TokenQueue.unescape("");
      tokenQueue0.chompBalanced('#', ';');
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "        ";
      stringArray0[2] = "";
      stringArray0[3] = "GB5rMdw)";
      stringArray0[4] = "";
      stringArray0[5] = "";
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.chompTo("");
      tokenQueue0.consumeTo("");
      Character character0 = Character.valueOf('#');
      Character.isBmpCodePoint(2447);
      tokenQueue0.addFirst(character0);
      tokenQueue0.peek();
      tokenQueue0.consumeWord();
      // Undeclared exception!
      try { 
        tokenQueue0.chompBalanced('#', '$');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Did not find balanced marker at ''
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Zp*w=m\"");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Zp*w=m\"";
      stringArray0[1] = "Zp*w=m\"";
      stringArray0[2] = "Zp*w=m\"";
      stringArray0[3] = "Zp*w=m\"";
      stringArray0[4] = "_}s\"";
      stringArray0[5] = "Zp*w=m\"";
      stringArray0[6] = "Zp*w=m\"";
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                ");
      tokenQueue0.matchChomp("                ");
      tokenQueue0.chompTo("                ");
      tokenQueue0.consumeTagName();
      tokenQueue0.isEmpty();
      Character character0 = Character.valueOf('!');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeTo("");
      tokenQueue0.chompToIgnoreCase("Queue not long enough to consume sequence");
      tokenQueue0.remainder();
      char[] charArray0 = new char[4];
      charArray0[0] = '!';
      charArray0[1] = 'L';
      charArray0[2] = '!';
      charArray0[3] = '!';
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("x4NM J!EYM4AG");
      Character character0 = new Character('!');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeToIgnoreCase("               ");
      tokenQueue0.chompTo("ju<*zmmu");
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "                  ";
      TokenQueue tokenQueue0 = new TokenQueue("                  ");
      tokenQueue0.matchesWhitespace();
      tokenQueue0.addFirst("                  ");
      tokenQueue0.remainder();
      tokenQueue0.advance();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeCssIdentifier();
      // Undeclared exception!
      try { 
        tokenQueue0.consume("                  ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("O");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "O";
      tokenQueue0.matchesAny(stringArray0);
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("?co0[=N=6vZv");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchesWhitespace();
      tokenQueue0.consumeTagName();
      tokenQueue0.matches("");
      tokenQueue0.matches("?co0[=N=6vZv");
      tokenQueue0.advance();
      tokenQueue0.matchesWord();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("x4NM J!EYM4AG");
      Character character0 = new Character('!');
      tokenQueue0.addFirst(character0);
      tokenQueue0.chompTo("ju<*zmmu");
      TokenQueue.unescape("ju<*zmmu");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("PM::<.]1G9");
      tokenQueue0.matches("");
      tokenQueue0.peek();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.matchChomp("");
      tokenQueue0.consumeWord();
      tokenQueue0.matchChomp("NGA1!");
      tokenQueue0.consumeToIgnoreCase("P_+d>rW`");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.matchChomp("");
      tokenQueue0.chompBalanced('1', 'r');
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("<)2=0A?");
      tokenQueue0.consume("<)2=0A?");
      tokenQueue0.peek();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<)2=0A?";
      stringArray0[1] = "                  ";
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "(GHs9D9] FV:%sv";
      TokenQueue tokenQueue0 = new TokenQueue("(GHs9D9] FV:%sv");
      String string1 = "x~<>[%I<<>";
      tokenQueue0.consumeToIgnoreCase("(GHs9D9] FV:%sv");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeToIgnoreCase("x~<>[%I<<>");
      // Undeclared exception!
      try { 
        tokenQueue0.consume();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "      ";
      TokenQueue tokenQueue0 = new TokenQueue("      ");
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToAny(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consume("");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("i3;f$d^^o%0M<uK<cT");
      tokenQueue0.consumeToIgnoreCase("C>5$9R%%{FmF6]`gc");
      tokenQueue0.consumeTo("Js6&l.1D:i0< W1");
      tokenQueue0.chompBalanced('+', '+');
      // Undeclared exception!
      try { 
        tokenQueue0.consume();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      tokenQueue0.matchesWord();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consumeTo("      ");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("P{vrK");
      tokenQueue0.addFirst("6AU~o)q#@,hTB");
      tokenQueue0.advance();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                   ");
      tokenQueue0.isEmpty();
      tokenQueue0.remainder();
      tokenQueue0.consumeWord();
      tokenQueue0.matchesWhitespace();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeToIgnoreCase("                   ");
      tokenQueue0.peek();
      // Undeclared exception!
      try { 
        tokenQueue0.matchesAny((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.matchesCS("sGo&gCJ");
      tokenQueue0.consumeToAny((String[]) null);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeTagName();
      tokenQueue0.matchesWhitespace();
      tokenQueue0.matchChomp("Queue not long enough to consume sequence");
      tokenQueue0.consumeElementSelector();
      // Undeclared exception!
      try { 
        tokenQueue0.consume("M");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("&/FQ%I0& ^O)$1z%F");
      Character character0 = new Character('t');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consume();
      tokenQueue0.toString();
      tokenQueue0.matchesStartTag();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeWord();
      tokenQueue0.matchChomp("-");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      Character character0 = Character.valueOf(':');
      tokenQueue0.addFirst(character0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.chompBalanced('-', ':');
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("MbGe8+b [:B;`vJn5");
      tokenQueue0.matchChomp("pb7%|%RnZo");
      tokenQueue0.matchesStartTag();
      String[] stringArray0 = new String[0];
      tokenQueue0.chompToIgnoreCase("MbGe8+b [:B;`vJn5");
      tokenQueue0.matchesWhitespace();
      tokenQueue0.consumeToAny(stringArray0);
      tokenQueue0.consumeTagName();
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.matchesWhitespace();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m8FbZ.&_A'7]oU1vWs");
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String[] stringArray0 = new String[0];
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("V@D");
      TokenQueue.unescape("");
      tokenQueue0.consumeTagName();
      tokenQueue0.chompBalanced('S', '?');
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = "(u@-!?n&,|xm";
      TokenQueue.unescape("(u@-!?n&,|xm");
      TokenQueue tokenQueue0 = new TokenQueue("(u@-!?n&,|xm");
      tokenQueue0.advance();
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.consumeWhitespace();
      tokenQueue0.matchesWord();
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("j!7Wmb#n`u!U<^");
      tokenQueue0.consumeElementSelector();
      TokenQueue.unescape("j!7Wmb#n`u!U<^");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeWhitespace();
      tokenQueue0.matchChomp("");
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("{m<s)y7CS-HjL");
      tokenQueue0.chompBalanced('j', 'j');
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.matchChomp("             ");
      tokenQueue0.chompTo("2<l7P+Wx8-7.fm~]`");
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Did not find balanced marker at '");
      tokenQueue0.consumeTo("Did not find balanced marker at '");
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.advance();
      tokenQueue0.matchesStartTag();
      tokenQueue0.peek();
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.chompToIgnoreCase(" q^*6L");
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = ')';
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#W>XEv_JB~ 'eaZ");
      tokenQueue0.consumeTagName();
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("K0T~z/gXqg(ssw~a");
      String[] stringArray0 = new String[0];
      tokenQueue0.consumeToAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      Character character0 = new Character('x');
      tokenQueue0.addFirst(character0);
      char[] charArray0 = new char[10];
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_";
      stringArray0[1] = "_";
      stringArray0[2] = "_";
      tokenQueue0.consumeAttributeKey();
      stringArray0[3] = "up.helper.validate         ";
      tokenQueue0.remainder();
      tokenQueue0.matchesAny(stringArray0);
      tokenQueue0.chompToIgnoreCase("_");
      tokenQueue0.chompTo("up.helper.validate         ");
      char[] charArray0 = new char[6];
      charArray0[0] = 's';
      charArray0[1] = 'm';
      charArray0[2] = 'R';
      charArray0[3] = '~';
      charArray0[4] = 'n';
      charArray0[5] = '9';
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      String string0 = "]0#";
      TokenQueue tokenQueue0 = new TokenQueue("]0#");
      tokenQueue0.consume();
      tokenQueue0.consumeElementSelector();
      tokenQueue0.chompToIgnoreCase("-");
      tokenQueue0.consumeTo(".9^8@yAo\")8s_t_3/C");
      tokenQueue0.chompTo(",>nJ%AI>iJ9[!^^[#N");
      tokenQueue0.consumeWord();
      // Undeclared exception!
      try { 
        tokenQueue0.consume("j%wKFSjT");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      tokenQueue0.consumeTo("_");
      tokenQueue0.isEmpty();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consume("");
      tokenQueue0.consume("");
      tokenQueue0.matchesStartTag();
      tokenQueue0.consumeElementSelector();
      char[] charArray0 = new char[8];
      charArray0[0] = 'u';
      charArray0[1] = '2';
      charArray0[2] = '%';
      charArray0[3] = 'o';
      charArray0[4] = '3';
      charArray0[5] = 'o';
      charArray0[6] = '3';
      charArray0[7] = '2';
      tokenQueue0.matchesAny(charArray0);
      tokenQueue0.consumeWord();
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[Md;");
      TokenQueue.unescape("_");
      String[] stringArray0 = new String[0];
      tokenQueue0.consumeToAny(stringArray0);
      TokenQueue.unescape("'");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.matchesCS("[Md;");
      Character character0 = new Character('R');
      tokenQueue0.consumeAttributeKey();
      Character.highSurrogate(2);
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeWord();
      tokenQueue0.matchChomp("[Md;");
      tokenQueue0.consumeTo("                   ");
      tokenQueue0.chompTo("'");
      String[] stringArray1 = new String[2];
      // Undeclared exception!
      try { 
        tokenQueue0.consume("                   ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      String string0 = ";%Yl>44BDR4N_4";
      TokenQueue tokenQueue0 = new TokenQueue(";%Yl>44BDR4N_4");
      tokenQueue0.matchesWhitespace();
      tokenQueue0.chompToIgnoreCase(";%Yl>44BDR4N_4");
      tokenQueue0.consumeWhitespace();
      tokenQueue0.peek();
      // Undeclared exception!
      try { 
        tokenQueue0.consume();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("x4NM J!EYM4AG");
      tokenQueue0.consumeToIgnoreCase("?");
      Character character0 = new Character('!');
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeToIgnoreCase("               ");
      tokenQueue0.chompTo("ju<*zmmu");
      tokenQueue0.toString();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ju<*zmmu";
      tokenQueue0.matchesAny(stringArray0);
      tokenQueue0.consumeAttributeKey();
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("x4NM J!EYM4AG");
      tokenQueue0.consumeToIgnoreCase("               ");
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      TokenQueue.unescape(" ");
      String string0 = "             ";
      TokenQueue tokenQueue0 = new TokenQueue("             ");
      tokenQueue0.consumeWord();
      tokenQueue0.matchesCS("   ");
      String string1 = "";
      tokenQueue0.consumeWhitespace();
      tokenQueue0.consumeWhitespace();
      // Undeclared exception!
      try { 
        tokenQueue0.consume(" ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      char[] charArray0 = new char[0];
      Character.valueOf('$');
      TokenQueue tokenQueue0 = new TokenQueue("?");
      tokenQueue0.chompTo("+>P_?A'8K{ ");
      TokenQueue.unescape("l_m<4,~t)(mwqo/");
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      tokenQueue0.matchesStartTag();
      Character character0 = new Character('*');
      Character.isAlphabetic(0);
      tokenQueue0.addFirst(character0);
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.matchChomp("                 ");
      tokenQueue0.peek();
      tokenQueue0.matchChomp("org.jsoup.helper.Validate");
      tokenQueue0.consume();
      tokenQueue0.addFirst("org.jsoup.helper.Validate");
      tokenQueue0.consume();
      tokenQueue0.advance();
      tokenQueue0.matchesWord();
      tokenQueue0.addFirst(")lyT_yeM");
      tokenQueue0.consumeWhitespace();
      tokenQueue0.chompBalanced('*', ')');
      tokenQueue0.matchesStartTag();
      tokenQueue0.consumeTagName();
      tokenQueue0.chompToIgnoreCase("org.jsoup.parser.TokenQueue");
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"");
      tokenQueue0.addFirst("\"");
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.consumeWhitespace();
      tokenQueue0.chompBalanced('x', 'x');
      TokenQueue.unescape("");
      tokenQueue0.consumeTagName();
      Character character0 = new Character('x');
      String string0 = tokenQueue0.consumeElementSelector();
      tokenQueue0.addFirst("DiQ]>U<#)@Wy");
      tokenQueue0.consumeAttributeKey();
      tokenQueue0.isEmpty();
      tokenQueue0.matchesWhitespace();
      assertEquals(']', tokenQueue0.peek());
      
      tokenQueue0.consumeTo("|");
      tokenQueue0.advance();
      String[] stringArray0 = new String[20];
      stringArray0[0] = "DiQ";
      stringArray0[1] = "DiQ]>U<#)@Wy";
      stringArray0[0] = "";
      tokenQueue0.matchesAny(stringArray0);
      String string1 = tokenQueue0.consumeTagName();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*{upZb*~''hM");
      tokenQueue0.toString();
      String string0 = "554A\\d";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "*{upZb*~''hM";
      stringArray0[1] = "*{upZb*~''hM";
      stringArray0[2] = "*{upZb*~''hM";
      stringArray0[3] = "*{upZb*~''hM";
      stringArray0[4] = "*{upZb*~''hM";
      stringArray0[5] = "*{upZb*~''hM";
      stringArray0[6] = "*|";
      stringArray0[7] = "*{upZb*~''hM";
      tokenQueue0.consumeToAny(stringArray0);
      TokenQueue.unescape("554Ad");
      tokenQueue0.consumeWhitespace();
      char char0 = ')';
      tokenQueue0.chompBalanced('H', ')');
      tokenQueue0.matchChomp("*{upZb*~''hM");
      tokenQueue0.consume();
      tokenQueue0.consume();
      tokenQueue0.consumeCssIdentifier();
      TokenQueue.unescape("o");
      tokenQueue0.addFirst("*{upZb*~''hM");
      tokenQueue0.advance();
      TokenQueue.unescape("554Ad");
      tokenQueue0.consumeTo("");
      tokenQueue0.consumeWord();
      // Undeclared exception!
      try { 
        tokenQueue0.chompBalanced('{', ')');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Did not find balanced marker at 'upZb*~''hM*~''hM'
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
