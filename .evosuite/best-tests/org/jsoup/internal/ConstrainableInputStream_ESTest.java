/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 16 22:00:06 GMT 2018
 */

package org.jsoup.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.net.SocketTimeoutException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.jsoup.internal.ConstrainableInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConstrainableInputStream_ESTest extends ConstrainableInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-7);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      constrainableInputStream1.read(byteArray0, 0, (int) (byte)0);
      constrainableInputStream1.close();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-1);
      int int0 = (-1377);
      constrainableInputStream1.timeout((byte) (-98), (byte) (-7));
      constrainableInputStream0.mark((byte)0);
      // Undeclared exception!
      try { 
        constrainableInputStream0.readToByteBuffer((byte) (-7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxSize must be 0 (unlimited) or larger
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 0);
      byte[] byteArray0 = new byte[0];
      constrainableInputStream0.read(byteArray0);
      ConstrainableInputStream constrainableInputStream1 = constrainableInputStream0.timeout(0, (-1L));
      try { 
        constrainableInputStream1.readToByteBuffer(0);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 3188;
      int int1 = 1;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      // Undeclared exception!
      try { 
        constrainableInputStream0.read((byte[]) null, 3188, 3188);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 3;
      int int1 = 1;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3, 1);
      int int2 = 32768;
      try { 
        constrainableInputStream0.readToByteBuffer(32768);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      constrainableInputStream0.timeout((-407L), 3L);
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      constrainableInputStream1.mark((byte)0);
      constrainableInputStream1.close();
      byteArray0[5] = (byte) (-98);
      try { 
        constrainableInputStream1.readToByteBuffer(Integer.MAX_VALUE);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 3188;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      ConstrainableInputStream constrainableInputStream1 = constrainableInputStream0.timeout(1, (-1L));
      byte[] byteArray0 = new byte[4];
      try { 
        constrainableInputStream1.read(byteArray0, 1, 6);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 3188;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-67);
      try { 
        constrainableInputStream0.read(byteArray0, 1, 32768);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      ConstrainableInputStream.wrap(constrainableInputStream0, 1, 0);
      constrainableInputStream1.close();
      byteArray0[5] = (byte) (-98);
      byte byte2 = (byte) (-1);
      try { 
        constrainableInputStream0.read(byteArray0, (int) (byte)0, 3543);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      constrainableInputStream1.timeout((byte) (-1), 4173L);
      constrainableInputStream1.close();
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      int int0 = (-1377);
      try { 
        constrainableInputStream0.readToByteBuffer((byte)0);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 32768);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        constrainableInputStream0.read(byteArray0, 952, 32768);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 1425, 1425);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)14;
      byte byte0 = (byte) (-48);
      constrainableInputStream0.timeout(1392409281319999L, 1000000L);
      byteArray0[1] = (byte) (-48);
      byte byte1 = (byte)104;
      byteArray0[2] = (byte)104;
      try { 
        constrainableInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 3188;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      byte[] byteArray0 = new byte[0];
      constrainableInputStream0.read(byteArray0);
      constrainableInputStream0.timeout(1, (-1L));
      byte[] byteArray1 = new byte[4];
      try { 
        constrainableInputStream0.read(byteArray1);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InputStream inputStream0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-101);
      byte byte0 = (byte) (-3);
      // Undeclared exception!
      ConstrainableInputStream.wrap((InputStream) null, 2147483565, (-226));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 3188;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      constrainableInputStream0.timeout(1, 3188);
      byte[] byteArray0 = new byte[4];
      try { 
        constrainableInputStream0.read(byteArray0);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 1577, 1577);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, 1, 263);
      try { 
        constrainableInputStream1.readToByteBuffer(5026);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 1, 2819);
      constrainableInputStream0.timeout(0L, 0L);
      int int0 = 232;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte) (-117);
      // Undeclared exception!
      try { 
        constrainableInputStream0.read(byteArray0, 1, (int) (byte) (-38));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 3188;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      constrainableInputStream0.timeout(1, (-1L));
      byte[] byteArray0 = new byte[4];
      try { 
        constrainableInputStream0.read(byteArray0);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 1);
      ConstrainableInputStream constrainableInputStream1 = constrainableInputStream0.timeout((-2088L), (-891L));
      constrainableInputStream1.timeout(1, 1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 172;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 172, 172);
      constrainableInputStream0.timeout(172, 172);
      constrainableInputStream0.mark(172);
      long long0 = 3672L;
      long long1 = 0L;
      constrainableInputStream0.close();
      int int1 = (-391);
      // Undeclared exception!
      try { 
        constrainableInputStream0.readToByteBuffer((-391));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxSize must be 0 (unlimited) or larger
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      constrainableInputStream1.close();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-1);
      int int0 = (-1377);
      try { 
        constrainableInputStream0.readToByteBuffer((byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 1425, 1425);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)14;
      byte byte0 = (byte) (-48);
      byteArray0[1] = (byte) (-48);
      byte byte1 = (byte)104;
      byteArray0[2] = (byte)104;
      try { 
        constrainableInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 858;
      // Undeclared exception!
      try { 
        ConstrainableInputStream.wrap((InputStream) null, 858, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 32768;
      int int1 = 0;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 0);
      ConstrainableInputStream.wrap((InputStream) null, 32768, 0);
      try { 
        constrainableInputStream0.available();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstrainableInputStream.wrap((InputStream) null, 0, (-479));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstrainableInputStream.wrap((InputStream) null, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 32768);
      ConstrainableInputStream constrainableInputStream1 = constrainableInputStream0.timeout(32768, 32768);
      try { 
        constrainableInputStream1.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resetting to invalid mark
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      constrainableInputStream0.mark((byte)0);
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-1), (byte) (-1));
      constrainableInputStream1.reset();
      constrainableInputStream1.close();
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-1);
      int int0 = (-1377);
      try { 
        constrainableInputStream0.readToByteBuffer((byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 0);
      byte[] byteArray0 = new byte[7];
      try { 
        constrainableInputStream0.readToByteBuffer(1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 1);
      byte[] byteArray0 = new byte[0];
      constrainableInputStream0.read(byteArray0);
      ConstrainableInputStream constrainableInputStream1 = constrainableInputStream0.timeout(1, (-1L));
      constrainableInputStream1.close();
      byte[] byteArray1 = new byte[4];
      constrainableInputStream1.timeout(1, 1392409281322756L);
      try { 
        constrainableInputStream0.read(byteArray1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 3;
      int int1 = 1;
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3, 1);
      int int2 = 32768;
      try { 
        constrainableInputStream0.readToByteBuffer(32768);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 1425, 1425);
      int int0 = 35;
      try { 
        constrainableInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resetting to invalid mark
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 32768, 4820);
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-7);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ConstrainableInputStream constrainableInputStream1 = ConstrainableInputStream.wrap(constrainableInputStream0, (byte) (-7), (byte) (-7));
      constrainableInputStream1.close();
      byteArray0[5] = (byte) (-98);
      int int0 = (-1377);
      constrainableInputStream0.mark((byte)0);
      // Undeclared exception!
      try { 
        constrainableInputStream0.readToByteBuffer((byte) (-7));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxSize must be 0 (unlimited) or larger
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConstrainableInputStream constrainableInputStream0 = ConstrainableInputStream.wrap((InputStream) null, 3188, 0);
      constrainableInputStream0.timeout(0, (-1L));
      byte[] byteArray0 = new byte[2];
      try { 
        constrainableInputStream0.read(byteArray0);
        fail("Expecting exception: SocketTimeoutException");
      
      } catch(SocketTimeoutException e) {
         //
         // Read timeout
         //
         verifyException("org.jsoup.internal.ConstrainableInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-61);
      int int0 = 676;
      // Undeclared exception!
      try { 
        ConstrainableInputStream.wrap((InputStream) null, 1759, (-4247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
