/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 16 21:56:48 GMT 2018
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Comparator;
import java.util.Locale;
import java.util.Map;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Entities;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.normalize();
      attributes0.put("8= ULo1LQyj%", false);
      attributes0.put("8= ULo1LQyj%", "8= ULo1LQyj%");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = document_OutputSettings0.charset();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset(charset0);
      try { 
        attributes0.html((Appendable) pipedWriter0, document_OutputSettings1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prepareEncoder();
      Attributes.checkNotNull("");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded("1Ne7Wbmcmi", "");
      Attributes attributes2 = attributes1.put(attribute0);
      Attributes attributes3 = attributes2.put("org.jsoup.nodes.Attributes$Dataset", " e\"1io!>6<Z0[cq]=\"e&quot;1io!>6<Z0[cq]\"");
      Attributes attributes4 = attributes1.clone();
      attributes3.equals(attributes4);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      attributes0.put("j/`j\"wbd|Sv", true);
      attributes0.keys = null;
      // Undeclared exception!
      try { 
        attributes0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.putIgnoreCase("NC:xULk BsPw", "BetweenDoctypePublicAndSystemIdentifiers");
      attributes0.hasKey("org.jsoup.nodes.Attributes$1");
      attributes0.indexOfKey("b%/0");
      attributes1.equals(attributes0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes0.put("Q,kg ;1:H", "Q,kg ;1:H");
      attributes0.indexOfKey("b%/0");
      attributes1.equals(attributes0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attributes attributes1 = attributes0.put("|<t9QVae", "!:-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!:-");
      attributes1.dataset();
      attributes1.hasKeyIgnoreCase("bV(w7nIS@}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ic;");
      attributes0.putIgnoreCase("=\"", "4k:p ");
      attributes0.hasKey("bV(w7nIS@}");
      Attribute attribute0 = new Attribute("^r?DhqXI-ET", "4k:p ");
      Attribute attribute1 = attribute0.clone();
      Attributes attributes2 = attributes0.put(attribute1);
      attributes1.clone();
      Object object0 = new Object();
      attributes1.equals(object0);
      attributes2.toString();
      attributes2.addAll(attributes0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.toString();
      attributes0.hasKey("QL#C");
      Attributes attributes1 = attributes0.put("gT6akr\"1p[0X_nzjOG&", "b.<=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"  b.<=\"b.<\"=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"");
      attributes0.get("gT6akr\"1p[0X_nzjOG&");
      Attributes attributes2 = attributes1.put("b.<=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"  b.<=\"b.<\"=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"", false);
      attributes2.indexOfKey("b.<=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"  b.<=\"b.<\"=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"");
      Attributes attributes3 = attributes2.put(" l~}o[N5*I/O22/\"5", "C5c");
      attributes3.normalize();
      attributes2.indexOfKey("C5c");
      attributes0.get("");
      Attribute attribute0 = Attribute.createFromEncoded("i", "b.<=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"  b.<=\"b.<\"=\"org.jsoup.nodes.attributes$dataset$datasetiterator\"");
      Attributes attributes4 = attribute0.parent;
      attribute0.parent = null;
      Attributes attributes5 = attributes2.put(attribute0);
      attributes5.equals(" l~}o[N5*I/O22/\"5");
      Attributes.checkNotNull(" l~}o[N5*I/O22/\"5");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[iAW9(", "");
      attributes1.hasKeyIgnoreCase("(`\"D*gofJN?RtJ8h?");
      attributes1.getIgnoreCase("[iAW9(");
      attributes0.asList();
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      attributes0.iterator();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        attributes0.put("", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.spliterator();
      attributes0.vals = null;
      attributes0.html();
      attributes0.asList();
      attributes0.dataset();
      // Undeclared exception!
      try { 
        attributes0.put("", ":& o`T:} _.pYV \"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("B.<", "B.<", attributes0);
      Attributes attributes1 = attribute0.parent;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Attributes attributes2 = attributes1.put(attribute0);
      attributes2.toString();
      attributes1.asList();
      Attributes attributes3 = attributes0.put(" B.<=\"B.<\"", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.jsoup.nodes.Attributes$Dataset$DatasetIterator";
      stringArray0[1] = "org.jsoup.nodes.Attributes$Dataset$DatasetIterator";
      stringArray0[2] = " B.<=\"B.<\"";
      attributes1.vals = stringArray0;
      attributes1.toString();
      attributes0.html();
      Attributes attributes4 = attributes2.clone();
      Attributes attributes5 = attributes0.put(" B.<=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"  B.<=\"B.<\"=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"", true);
      attributes4.asList();
      attributes2.putIgnoreCase("replacementChar", " B.<=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"  B.<=\"B.<\"=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"");
      attributes0.dataset();
      attributes4.put("formnovalidate", true);
      Attributes attributes6 = attributes5.put("formnovalidate", "PaktcvL~oe7(90M");
      Attributes attributes7 = attributes1.put("B.<", true);
      attributes1.size();
      attributes6.put(" B.<=\"B.<\"", true);
      attributes3.addAll(attributes7);
      attributes2.size();
      attributes2.getIgnoreCase("formnovalidate");
      attributes0.get("PaktcvL~oe7(90M");
      attributes3.putIgnoreCase("PaktcvL~oe7(90M", "~YRHy3a ");
      attributes1.put(attribute0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.remove("1[");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "1[";
      Attributes attributes1 = new Attributes();
      stringArray0[1] = "1[";
      attributes0.asList();
      stringArray0[2] = "1[";
      stringArray0[3] = "1[";
      stringArray0[4] = "1[";
      stringArray0[5] = "1[";
      attributes0.keys = stringArray0;
      Object object0 = new Object();
      attributes0.equals(object0);
      // Undeclared exception!
      try { 
        attributes0.putIgnoreCase("", "1[");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = null;
      String string1 = "\\8= ULo1LQyj%";
      Attributes attributes0 = new Attributes();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        attributes0.indexOfKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes0.indexOfKey("b%/0");
      attributes1.equals(attributes0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", "");
      Attributes attributes2 = attributes1.clone();
      Attribute attribute0 = Attribute.createFromEncoded("String input must not be null", "Hwhl");
      Attributes attributes3 = attribute0.parent;
      Attribute attribute1 = new Attribute("Hwhl", "com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy", (Attributes) null);
      Attribute attribute2 = attribute1.clone();
      Attributes attributes4 = attributes2.put(attribute2);
      // Undeclared exception!
      try { 
        attributes4.addAll((Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("ogH", "");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.normalize();
      attributes1.hasKey("_E$KnFd;52[`");
      attributes0.indexOfKey("");
      attribute0.toString();
      attributes0.remove("org.jsoup.nodes.Attributes$Dataset$EntrySet");
      Attribute attribute1 = new Attribute("/F$OCkoH4h", "org.jsoup.nodes.Attributes$Dataset$EntrySet", attributes0);
      Map.Entry.comparingByValue();
      Attributes attributes2 = attributes0.put(attribute1);
      attributes2.iterator();
      attributes0.hashCode();
      attributes2.dataset();
      Map.Entry.comparingByKey();
      attributes1.asList();
      attributes1.dataset();
      attributes1.indexOfKey("/F$OCkoH4h");
      // Undeclared exception!
      try { 
        attributes1.hasKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("B.<", "B.<", attributes0);
      Attributes attributes1 = attribute0.parent;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Attributes attributes2 = attributes1.put(attribute0);
      attributes2.toString();
      attributes1.asList();
      Attributes attributes3 = attributes0.put(" B.<=\"B.<\"", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.jsoup.nodes.Attributes$Dataset$DatasetIterator";
      stringArray0[1] = "org.jsoup.nodes.Attributes$Dataset$DatasetIterator";
      stringArray0[2] = " B.<=\"B.<\"";
      attributes1.vals = stringArray0;
      attributes1.toString();
      attributes0.html();
      Attributes attributes4 = attributes2.clone();
      Attributes attributes5 = attributes0.put(" B.<=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"  B.<=\"B.<\"=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"", true);
      attributes4.asList();
      attributes2.putIgnoreCase("replacementChar", " B.<=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"  B.<=\"B.<\"=\"org.jsoup.nodes.Attributes$Dataset$DatasetIterator\"");
      attributes0.dataset();
      attributes4.put("formnovalidate", true);
      Attributes attributes6 = attributes5.put("formnovalidate", "PaktcvL~oe7(90M");
      Attributes attributes7 = attributes1.put("B.<", false);
      attributes1.size();
      attributes6.put(" B.<=\"B.<\"", true);
      attributes3.addAll(attributes7);
      attributes2.size();
      attributes2.getIgnoreCase("formnovalidate");
      attributes0.get("PaktcvL~oe7(90M");
      attributes3.putIgnoreCase("PaktcvL~oe7(90M", "~YRHy3a ");
      attributes1.put(attribute0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("e\"1io!>6<Z0[cq]", true);
      attributes0.toString();
      attributes0.indexOfKey("!");
      attributes1.addAll(attributes0);
      attributes0.get("");
      attributes0.equals("");
      attributes1.html();
      attributes0.clone();
      Attributes attributes2 = attributes0.put(" e\"1io!>6<Z0[cq]", "e\"1io!>6<Z0[cq]");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(false);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(false);
      attributes1.html((Appendable) printWriter0, document_OutputSettings2);
      attributes2.equals((Object) null);
      attributes2.hasKeyIgnoreCase("!");
      attributes0.hashCode();
      attributes0.normalize();
      attributes1.putIgnoreCase("=\"", "");
      Attributes.checkNotNull("");
      // Undeclared exception!
      try { 
        attributes1.hasKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = null;
      String[] stringArray0 = new String[3];
      Attributes attributes1 = attributes0.clone();
      attributes1.normalize();
      attributes1.normalize();
      stringArray0[0] = null;
      attributes0.spliterator();
      stringArray0[1] = null;
      stringArray0[2] = null;
      attributes0.vals = stringArray0;
      attributes0.clone();
      String string1 = "";
      // Undeclared exception!
      try { 
        attributes0.putIgnoreCase((String) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = ".7B.@b;Gl";
      Attributes attributes1 = attributes0.put(".7B.@b;Gl", ".7B.@b;Gl");
      attributes1.iterator();
      attributes1.spliterator();
      attributes1.size();
      attributes1.normalize();
      attributes1.asList();
      attributes1.put(".7B.@b;Gl", true);
      Attribute attribute0 = new Attribute(".7B.@b;Gl", ".7B.@b;Gl", attributes1);
      Appendable appendable0 = null;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = null;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      // Undeclared exception!
      try { 
        document_OutputSettings1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = null;
      String string1 = null;
      // Undeclared exception!
      try { 
        attributes0.hasKeyIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.spliterator();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "G/|Hm5T_fwRwAVr>aM";
      stringArray0[1] = "(O5$sv-vYe";
      stringArray0[2] = "G/|Hm5T_fwRwAVr>aM";
      stringArray0[3] = "G/|Hm5T_fwRwAVr>aM";
      stringArray0[4] = "G/|Hm5T_fwRwAVr>aM";
      stringArray0[5] = "G/|Hm5T_fwRwAVr>aM";
      stringArray0[6] = "G/|Hm5T_fwRwAVr>aM";
      attributes0.keys = stringArray0;
      Attributes attributes1 = attributes0.put("G/|Hm5T_fwRwAVr>aM", false);
      attributes1.dataset();
      Attributes attributes2 = attributes1.clone();
      // Undeclared exception!
      try { 
        attributes2.put("G/|Hm5T_fwRwAVr>aM", "G/|Hm5T_fwRwAVr>aM");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.indexOfKey("org.jsoup.nodes.Attributes");
      String string0 = "pH^L_-e(X4G +mrb";
      attributes0.toString();
      attributes0.html();
      attributes0.removeIgnoreCase("pH^L_-e(X4G +mrb");
      attributes0.getIgnoreCase("pH^L_-e(X4G +mrb");
      attributes0.put("", false);
      attributes0.hashCode();
      attributes0.getIgnoreCase("");
      // Undeclared exception!
      try { 
        attributes0.getIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "Ejt2~!l";
      Attributes.checkNotNull("Ejt2~!l");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = null;
      try {
        attribute0 = new Attribute((String) null, "Ejt2~!l", attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(".properties", ".properties");
      Attributes attributes2 = attributes1.put("WVbhE2 w", false);
      attributes1.putIgnoreCase("org.jsoup.nodes.Attributes$Dataset", ".backup");
      attributes1.removeIgnoreCase("org.jsoup.nodes.Attributes$Dataset");
      Attributes attributes3 = attributes2.clone();
      attributes3.addAll(attributes1);
      Attributes attributes4 = attributes1.clone();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "4k:p ";
      stringArray0[1] = "WVbhE2 w";
      stringArray0[2] = "org.jsoup.nodes.Attributes$Dataset";
      stringArray0[3] = "WVbhE2 w";
      stringArray0[4] = "WVbhE2 w";
      stringArray0[5] = ".properties";
      stringArray0[6] = ".properties";
      attributes1.vals = stringArray0;
      attributes2.putIgnoreCase("4k:p ", "4k:p ");
      attributes2.hashCode();
      attributes0.html();
      attributes1.asList();
      attributes1.equals("");
      attributes0.getIgnoreCase("");
      attributes4.size();
      attributes0.hasKeyIgnoreCase("readonly");
      attributes0.indexOfKey("W}d!/ybb^,+oC$+d");
      Attributes.checkNotNull("");
      attributes1.hashCode();
      attributes2.get("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("+", "+", attributes0);
      Attributes attributes1 = attribute0.parent;
      Attributes attributes2 = attributes0.put(attribute0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 429);
      attributes1.put("+", "+");
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.xhtml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
      attributes2.hasKey("+");
      attributes1.html((Appendable) mockPrintStream0, document_OutputSettings1);
      Attribute.createFromEncoded("+", "+");
      attributes1.normalize();
      attribute0.toString();
      attributes1.asList();
      attributes1.removeIgnoreCase("+");
      Object object0 = new Object();
      attributes0.equals(object0);
      Attributes.checkNotNull("s");
      Attributes attributes3 = attributes0.clone();
      attributes3.iterator();
      attributes2.toString();
      attributes2.html((Appendable) null, document_OutputSettings2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "";
      Attributes attributes1 = attributes0.put("", "");
      attributes1.dataset();
      attributes1.put(",", ",");
      Attributes attributes2 = attributes0.put("[iAW9(", "");
      attributes2.hasKeyIgnoreCase("(`\"D*gofJN?RtJ8h?");
      attributes2.getIgnoreCase("[iAW9(");
      attributes1.remove(",");
      // Undeclared exception!
      try { 
        attributes0.asList();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "org.jsoup.nodes.Attributes";
      attributes0.getIgnoreCase("org.jsoup.nodes.Attributes");
      Attributes attributes1 = attributes0.clone();
      Attributes attributes2 = attributes1.put("", false);
      Attributes attributes3 = attributes2.put("abs:", (String) null);
      String string1 = "Y#UjeDl-M";
      Attribute attribute0 = Attribute.createFromEncoded("Y#UjeDl-M", "");
      Attribute attribute1 = attribute0.clone();
      Attributes attributes4 = attributes3.put(attribute0);
      Attributes attributes5 = attributes3.put(attribute1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      attributes5.put("", (String) null);
      stringArray0[3] = "Y#UjeDl-M";
      stringArray0[4] = null;
      attributes3.getIgnoreCase("*F]--3bT");
      attributes4.vals = stringArray0;
      // Undeclared exception!
      try { 
        attributes5.addAll(attributes1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.html();
      attributes0.hasKeyIgnoreCase("");
      Attributes attributes1 = attributes0.put("", "");
      attributes0.dataset();
      attributes0.iterator();
      Attributes.checkNotNull("");
      Attributes.checkNotNull("");
      attributes0.clone();
      boolean boolean0 = true;
      attributes1.put("", true);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(198);
      // Undeclared exception!
      try { 
        byteBuffer0.putChar(198, '&');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = null;
      // Undeclared exception!
      try { 
        attributes0.hasKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "7KoCT}@@p}Win";
      String string1 = "";
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("7KoCT}@@p}Win", "", attributes0);
      Attribute attribute1 = attribute0.clone();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "0lCWH^UN#Q/#sfY<}";
      stringArray0[2] = "7KoCT}@@p}Win";
      String string2 = "org.jsoup.nodes.Attributes$1";
      stringArray0[3] = "org.jsoup.nodes.Attributes$1";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "7KoCT}@@p}Win";
      stringArray0[7] = "7KoCT}@@p}Win";
      attributes0.keys = stringArray0;
      Attributes attributes1 = attribute1.parent;
      attributes1.toString();
      attributes1.iterator();
      attributes1.size();
      attributes1.removeIgnoreCase("Y23");
      // Undeclared exception!
      try { 
        attributes0.put(attribute1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("4%NM;Cj'u", " *Y8b^CIWoIJV|!3");
      String[] stringArray0 = new String[6];
      stringArray0[0] = " *Y8b^CIWoIJV|!3";
      stringArray0[1] = "4%NM;Cj'u";
      stringArray0[2] = "4%NM;Cj'u";
      stringArray0[3] = " *Y8b^CIWoIJV|!3";
      stringArray0[4] = "4%NM;Cj'u";
      stringArray0[5] = "4%NM;Cj'u";
      attributes0.keys = stringArray0;
      attributes1.toString();
      Attributes attributes2 = attributes0.put("p6ive7=_", false);
      attributes2.getIgnoreCase("p6ive7=_");
      attributes1.html();
      attributes1.remove(" *Y8b^CIWoIJV|!3");
      attributes0.size();
      attributes0.iterator();
      attributes1.indexOfKey("FPR$#Ci%!@s1");
      attributes1.dataset();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("7cN`l@z%srYe|=X=", "7cN`l@z%srYe|=X=", attributes0);
      Attributes attributes1 = attribute0.parent;
      Attributes attributes2 = attributes1.put("7cN`l@z%srYe|=X=", false);
      Attributes attributes3 = attributes2.clone();
      Attributes attributes4 = attributes3.put("7cN`l@z%srYe|=X=", (String) null);
      attributes4.asList();
      attributes4.toString();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes0.html((Appendable) null, document_OutputSettings0);
      String string0 = "muted";
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Attributes$Dataset$EntrySet", "muted");
      String string1 = "< 7:q ";
      String string2 = "";
      String string3 = "";
      // Undeclared exception!
      try { 
        Map.Entry.comparingByValue((Comparator<? super Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("`SlY%hpF,yr|17$$", "Vp\"Ww&J.o+>$");
      Attributes attributes2 = attributes1.put("fallback", false);
      String string0 = "";
      attributes2.getIgnoreCase("");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(false);
      document_OutputSettings0.indentAmount(0);
      document_OutputSettings1.encoder();
      // Undeclared exception!
      try { 
        attributes2.html((Appendable) null, document_OutputSettings1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("  ", "  ");
      attributes1.iterator();
      Attribute attribute0 = Attribute.createFromEncoded("  ", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
      Attributes attributes2 = attributes0.put(attribute0);
      attributes2.get("org.jsoup.nodes.Attributes$Dataset$EntrySet");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", "+fSR5,g@XoP)zQp");
      Attributes attributes2 = attributes1.put("", true);
      Attribute attribute0 = new Attribute("+fSR5,g@XoP)zQp", "");
      Attributes attributes3 = attributes2.put(attribute0);
      attributes2.put("h$O8LhyG78`yV~3", false);
      attribute0.parent = attributes0;
      attributes3.getIgnoreCase("org.jsoup.nodes.Attributes$1");
      attributes3.put("org.jsoup.nodes.Attributes$Dataset", "");
      attributes1.put("1.0", "");
      Attributes.checkNotNull("org.jsoup.nodes.Attributes$1");
      Attributes.checkNotNull("xml");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "";
      boolean boolean0 = false;
      Attributes attributes1 = attributes0.put("", false);
      String string1 = "KG_#,doY~a^RaYs";
      attributes1.vals = null;
      // Undeclared exception!
      try { 
        attributes1.put((Attribute) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "lZxoj$@|ij7";
      // Undeclared exception!
      try { 
        attributes0.remove((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "=sB8G[)dN_6X1&.0p";
      Attribute attribute0 = new Attribute("=sB8G[)dN_6X1&.0p", "=sB8G[)dN_6X1&.0p", attributes0);
      Map.Entry.comparingByKey();
      attributes0.putIgnoreCase("", "=sB8G[)dN_6X1&.0p");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.hasKey("");
      attributes0.normalize();
      Map.Entry.comparingByKey();
      Attribute.createFromEncoded("0,Vp%3sp-7?", "0,Vp%3sp-7?");
      attributes1.hasKeyIgnoreCase("");
      attributes0.vals = null;
      // Undeclared exception!
      try { 
        attributes1.put("0,Vp%3sp-7?", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = null;
      String string1 = "                   ";
      // Undeclared exception!
      try { 
        attributes0.put((String) null, "                   ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = null;
      String string1 = "";
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
      try { 
        attributes0.put((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      String string0 = "";
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      Attributes attributes2 = attributes1.put("", false);
      attributes2.get("");
      attributes2.hasKey("");
      String string1 = "2{p6PCn;6ug/]W12&";
      attributes1.getIgnoreCase("2{p6PCn;6ug/]W12&");
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Attributes$1", "", attributes1);
      Attributes attributes3 = attributes2.put(attribute0);
      attributes0.hasKey("");
      Attributes attributes4 = attributes3.put("", "");
      attributes4.hasKeyIgnoreCase("");
      attributes3.size();
      CharArrayWriter charArrayWriter0 = null;
      try {
        charArrayWriter0 = new CharArrayWriter((-3644));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -3644
         //
         verifyException("java.io.CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("oR;P&p");
      attributes0.dataset();
      attributes0.dataset();
      Attributes attributes1 = attributes0.put("oR;P&p", false);
      attributes1.getIgnoreCase("oR;P&p");
      attributes1.html();
      attributes1.getIgnoreCase("oR;P&p");
      attributes1.hasKeyIgnoreCase("");
      attributes0.putIgnoreCase("", "");
      attributes1.equals("");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded(";NO`,j-<", "");
      Attribute attribute1 = attribute0.clone();
      Attribute attribute2 = Attribute.createFromEncoded(";NO`,j-<", ";NO`,j-<");
      Attributes attributes2 = attributes1.put(attribute1);
      attributes2.normalize();
      attributes2.size();
      Attributes attributes3 = attributes0.put(attribute2);
      attributes2.addAll(attributes0);
      attributes3.hasKey("");
      attributes3.indexOfKey(";NO`,j-<");
      attributes1.putIgnoreCase("`5>\">|+BVfYsUQ", "`5>\">|+BVfYsUQ");
      attributes1.remove("~ UT");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = new Attribute("Q,kg ;1:H", "Q,kg ;1:H");
      Attributes attributes2 = attributes1.put(attribute0);
      Attributes attributes3 = attributes2.put("Q,kg ;1:H", "");
      attributes3.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hasKey("am[H#<?<");
      Attributes attributes1 = attributes0.clone();
      attributes1.toString();
      attributes0.putIgnoreCase("", "");
      attributes0.hasKey("\"'");
      attributes0.put("S21rP", false);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("?6tDE>Ms*8UW{%}", true);
      Attributes attributes2 = attributes1.put("?6tDE>Ms*8UW{%}", "JT)#M*/m>Dy2du");
      attributes2.getIgnoreCase("?6tDE>Ms*8UW{%}");
      Attribute attribute0 = Attribute.createFromEncoded("JT)#M*/m>Dy2du", "?6tDE>Ms*8UW{%}");
      Attributes attributes3 = attributes2.put(attribute0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "JT)#M*/m>Dy2du";
      stringArray0[1] = "JT)#M*/m>Dy2du";
      stringArray0[2] = "?6tDE>Ms*8UW{%}";
      stringArray0[3] = "JT)#M*/m>Dy2du";
      stringArray0[4] = "JT)#M*/m>Dy2du";
      stringArray0[5] = "JT)#M*/m>Dy2du";
      attributes3.vals = stringArray0;
      attributes0.getIgnoreCase("?6tDE>Ms*8UW{%}");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("org.jsoup.nodes.Attributes$1", "org.jsoup.nodes.Attributes$1");
      Attribute attribute1 = attribute0.clone();
      attributes0.asList();
      Attributes attributes1 = attributes0.put(attribute1);
      attributes1.indexOfKey("org.jsoup.nodes.Attributes$1");
      Map.Entry.comparingByValue();
      attributes0.get("SYk");
      attributes0.asList();
      attributes1.getIgnoreCase("O=tG`9L5BL");
      attributes1.hasKey(".properties");
      attributes0.addAll(attributes1);
      attributes0.hasKeyIgnoreCase("");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("quirks", true);
      Attribute attribute0 = new Attribute("org.apache.oro.io.AwkFilenameFilter", "org.apache.oro.io.AwkFilenameFilter", attributes1);
      Attributes attributes2 = attribute0.parent;
      attributes2.put("", true);
      Attributes attributes3 = attributes2.clone();
      attributes3.hashCode();
      attributes0.toString();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = new Attribute("a%Y{W,a", "org.jsoup.nodes.Attributes$1", attributes1);
      Attribute attribute1 = attribute0.clone();
      Attributes attributes2 = attributes1.put(attribute1);
      attributes2.clone();
      attributes2.toString();
      Attributes attributes3 = attributes2.put(attribute1);
      attributes3.hasKeyIgnoreCase("amp=12;1&gt=1q;3&lt=1o;2&quot=y;0&");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.clone();
      Attributes attributes1 = attributes0.put("$", true);
      attributes1.html();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("Vu%@/)68'1?Jf@$AU:E");
      attributes0.spliterator();
      Attributes attributes1 = attributes0.put("", "");
      Attributes attributes2 = attributes1.clone();
      attributes2.normalize();
      Attributes attributes3 = attributes2.put("", false);
      attributes3.get("");
      attributes1.hasKeyIgnoreCase("");
      attributes3.asList();
      attributes2.hasKeyIgnoreCase("z[C%}HrxFd=!");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Vu%@/)68'1?Jf@$AU:E";
      stringArray0[1] = "";
      stringArray0[2] = "";
      attributes3.keys = stringArray0;
      attributes3.size();
      attributes1.dataset();
      Attributes.checkNotNull("");
      attributes2.removeIgnoreCase("");
      Attributes.checkNotNull("");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.iterator();
      Attributes attributes1 = attributes0.clone();
      attributes1.put("e`][Y&?BnC>|LqNAq}", false);
      attributes1.spliterator();
      attributes1.removeIgnoreCase("e`][Y&?BnC>|LqNAq}");
      attributes1.toString();
      attributes1.hasKey("");
      Attributes.checkNotNull("e`][Y&?BnC>|LqNAq}");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "";
      attributes0.keys = null;
      attributes0.getIgnoreCase("");
      attributes0.html();
      attributes0.removeIgnoreCase("");
      attributes0.getIgnoreCase("");
      // Undeclared exception!
      try { 
        attributes0.put("hTVSI8OH", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("CJ!wzz8\"_36|nsI", "CJ!wzz8\"_36|nsI", attributes0);
      Attribute attribute1 = attribute0.clone();
      Attributes attributes1 = attribute1.parent;
      attributes1.asList();
      attributes1.get("CJ!wzz8\"_36|nsI");
      Attributes attributes2 = attributes1.put("_F|>>Zhm@iCvR.j", false);
      attributes2.getIgnoreCase("CJ!wzz8\"_36|nsI");
      attributes2.size();
      attributes2.put("g:I(2?ajW", "_F|>>Zhm@iCvR.j");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", "");
      Attributes attributes2 = attributes1.put("", true);
      attributes2.get("");
      attributes1.normalize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      attributes1.indexOfKey("Vlnm$LdbV!_vp|UHO");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.normalize();
      attributes1.normalize();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hasKeyIgnoreCase("W~4z<1n=Pji");
      // Undeclared exception!
      try { 
        attributes0.get((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("t0/c");
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("pmBc]Hv", "pmBc]Hv");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("pmBc]Hv", false);
      Attributes attributes3 = attributes2.clone();
      attributes3.html();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("|ZF sHOuR>J~", "|ZF sHOuR>J~", attributes0);
      Attributes attributes1 = attribute0.parent;
      Attributes attributes2 = attributes1.put(attribute0);
      Attributes attributes3 = attributes2.clone();
      attributes3.dataset();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes0.addAll(attributes1);
      Attributes attributes2 = attributes0.put("]8^&{5F(DFFi", false);
      attributes0.equals(attributes2);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attributes attributes1 = attributes0.put("|<t9QVae", true);
      attributes1.normalize();
      Attributes attributes2 = attributes0.put("|<t9QVae", "|<t9QVae");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|<t9QVae");
      attributes0.dataset();
      attributes2.hasKeyIgnoreCase("bV(w7nIS@}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ic;");
      attributes1.addAll(attributes2);
      attributes1.putIgnoreCase("|<t9QVae", "|<t9QVae");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      attributes0.hasKey("$,fj\"-Z;g:x");
      attributes2.clone();
      Object object0 = new Object();
      attributes2.equals(object0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)6;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Attributes attributes1 = attributes0.put("}m", "}m");
      attributes0.get("-~Xs");
      Attributes attributes2 = attributes1.put("}m", true);
      attributes0.indexOfKey("*xw~vri>a(`cs!e1xq");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      attributes2.hasKeyIgnoreCase("");
      Attributes.checkNotNull("}m");
      Attribute attribute0 = new Attribute("formnovalidate", "formnovalidate", attributes0);
      attributes1.put(attribute0);
      attributes2.put(attribute0);
      attributes1.iterator();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attributes attributes1 = attributes0.put("|<t9QVae", true);
      attributes1.normalize();
      attributes0.put("!:-", true);
      Attributes attributes2 = attributes0.put("|<t9QVae", "!:-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!:-");
      attributes2.dataset();
      attributes2.hasKeyIgnoreCase("bV(w7nIS@}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ic;");
      attributes1.addAll(attributes2);
      attributes1.putIgnoreCase("|<t9QVae", "|<t9QVae");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      attributes0.putIgnoreCase("=\"", "4k:p ");
      attributes0.hasKey("AfterAttributeName");
      Attribute attribute0 = new Attribute("^r?DhqXI-ET", "4k:p ");
      Attribute attribute1 = attribute0.clone();
      attributes0.put(attribute1);
      attributes1.removeIgnoreCase("Ic;");
      attributes2.clone();
      Object object0 = new Object();
      attributes2.equals(object0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.getIgnoreCase("");
      Attributes attributes1 = attributes0.clone();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Q,kg ;1:H";
      stringArray0[1] = "";
      stringArray0[2] = "";
      attributes0.hasKey("");
      stringArray0[3] = "";
      stringArray0[4] = "";
      attributes0.dataset();
      stringArray0[5] = "";
      stringArray0[6] = "Q,kg ;1:H";
      attributes0.vals = stringArray0;
      attributes0.indexOfKey("b%/0");
      attributes1.equals(attributes0);
      attributes1.toString();
      attributes1.put("W}d!/ybb^,+oC$+d", false);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.remove("1[");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "1[";
      attributes0.put("n}x}24oE!", true);
      stringArray0[1] = "1[";
      attributes0.asList();
      stringArray0[2] = "1[";
      stringArray0[3] = "1[";
      stringArray0[4] = "1[";
      stringArray0[5] = "1[";
      attributes0.keys = stringArray0;
      Object object0 = new Object();
      attributes0.equals(object0);
      attributes0.putIgnoreCase("", "");
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(".properties", ".properties");
      Attributes attributes2 = attributes1.put("WVbhE2 w", false);
      attributes1.putIgnoreCase("org.jsoup.nodes.Attributes$Dataset", ".backup");
      attributes1.removeIgnoreCase("org.jsoup.nodes.Attributes$Dataset");
      Attributes attributes3 = attributes2.clone();
      attributes3.addAll(attributes1);
      Attributes attributes4 = attributes1.clone();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.jsoup.nodes.Attributes$Dataset";
      stringArray0[1] = "WVbhE2 w";
      stringArray0[2] = "org.jsoup.nodes.Attributes$Dataset";
      stringArray0[3] = "WVbhE2 w";
      stringArray0[4] = "WVbhE2 w";
      stringArray0[5] = ".properties";
      stringArray0[6] = ".properties";
      attributes1.vals = stringArray0;
      attributes2.putIgnoreCase(".backup", ".backup");
      attributes2.hashCode();
      attributes0.html();
      attributes1.asList();
      attributes1.equals("");
      attributes0.getIgnoreCase("");
      attributes4.size();
      attributes0.hasKeyIgnoreCase("readonly");
      attributes0.indexOfKey("W}d!/ybb^,+oC$+d");
      Attributes.checkNotNull("");
      attributes1.hashCode();
      attributes2.get("");
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = "";
      Attributes attributes1 = attributes0.put("", "");
      attributes1.dataset();
      attributes1.put(",", ",");
      Attributes attributes2 = attributes0.put("[iAW9(", "");
      attributes2.hasKeyIgnoreCase("");
      attributes2.getIgnoreCase("[iAW9(");
      attributes1.remove(",");
      // Undeclared exception!
      try { 
        attributes0.asList();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = "\\8= ULo1LQyj%";
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = null;
      try {
        attribute0 = new Attribute((String) null, "8= ULo1LQyj%", attributes1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("k7O61w%p2?DS", (String) null);
      String string0 = "";
      boolean boolean0 = false;
      attributes0.put("", false);
      Attributes attributes2 = attributes1.clone();
      String string1 = "";
      attributes1.indexOfKey("");
      String string2 = "&[v^gL}Rkn";
      Attribute attribute0 = Attribute.createFromEncoded("-~Xs", "&[v^gL}Rkn");
      attribute0.setKey("&[v^gL}Rkn");
      Attribute attribute1 = attribute0.clone();
      attributes2.get("k7O61w%p2?DS");
      Attributes attributes3 = attributes2.put(attribute1);
      // Undeclared exception!
      try { 
        attributes3.removeIgnoreCase((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prepareEncoder();
      Attributes.checkNotNull("");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded("1Ne7Wbmcmi", "");
      Attributes attributes2 = attributes1.put(attribute0);
      Attributes attributes3 = attributes2.put("org.jsoup.nodes.Attributes$Dataset", " e\"1io!>6<Z0[cq]=\"e&quot;1io!>6<Z0[cq]\"");
      Attributes attributes4 = attributes1.clone();
      attributes4.clone();
      attributes3.equals(attributes4);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes.checkNotNull("org.jsoup.SerializationException");
      attributes0.removeIgnoreCase("");
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Attributes attributes1 = attributes0.put("e\"1io!>6<Z0[cq]", true);
      attributes0.toString();
      attributes0.indexOfKey("!");
      attributes1.addAll(attributes0);
      attributes0.get("");
      attributes0.equals("");
      attributes1.html();
      attributes1.put("", false);
      Attributes attributes2 = attributes0.put(" e\"1io!>6<Z0[cq]", "e\"1io!>6<Z0[cq]");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(false);
      Document.OutputSettings document_OutputSettings2 = document_OutputSettings1.prettyPrint(false);
      attributes1.html((Appendable) printWriter0, document_OutputSettings2);
      attributes2.equals((Object) null);
      attributes2.hasKeyIgnoreCase("!");
      attributes0.hashCode();
      attributes0.normalize();
      attributes1.putIgnoreCase("=\"", "");
      Attributes.checkNotNull("");
      // Undeclared exception!
      try { 
        attributes1.hasKey((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
