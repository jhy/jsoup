/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 16 22:06:45 GMT 2018
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.XmlDeclaration;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlDeclaration_ESTest extends XmlDeclaration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("defer", "defer", true);
      xmlDeclaration0.outerHtmlTail((Appendable) null, 202, (Document.OutputSettings) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("2MiAWd>6cJ#", true);
      xmlDeclaration0.coreValue((String) null);
      xmlDeclaration0.name();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("!", true);
      xmlDeclaration0.clearAttributes();
      xmlDeclaration0.name();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("!", true);
      xmlDeclaration0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      xmlDeclaration0.toString();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(">", "", false);
      Node node0 = xmlDeclaration0.doClone((Node) null);
      xmlDeclaration0.setParentNode(node0);
      xmlDeclaration0.siblingIndex = (-2177);
      // Undeclared exception!
      try { 
        xmlDeclaration0.toString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2176
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("e/YX@B`ODdi", false);
      xmlDeclaration0.value = (Object) xmlDeclaration0;
      // Undeclared exception!
      try { 
        xmlDeclaration0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.XmlDeclaration cannot be cast to java.lang.String
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", false);
      // Undeclared exception!
      try { 
        xmlDeclaration0.outerHtmlHead((Appendable) null, 173, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.XmlDeclaration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = null;
      try {
        xmlDeclaration0 = new XmlDeclaration((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = null;
      try {
        xmlDeclaration0 = new XmlDeclaration((String) null, "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("org.jsoup.nodes.XmlDeclaraton", false);
      xmlDeclaration0.toString();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("org.jsoup.nodes.XmlDeclaraton", false);
      xmlDeclaration0.getWholeDeclaration();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("defer", "defer", true);
      xmlDeclaration0.nodeName();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("!", true);
      xmlDeclaration0.toString();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("!", true);
      String string0 = xmlDeclaration0.name();
      assertEquals("#declaration", xmlDeclaration0.nodeName());
      assertEquals("!", string0);
  }
}
